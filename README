──────────────────────────────────────────────────────────────────────────────────────────────
Topic - Installation - Install/Update/Uninstall and Configuration
──────────────────────────────────────────────────────────────────────────────────────────────
Install:   _centauri_bash_lib needs no complex setup program: just unpack the source archive
           and run one of the included tools with --info install.

           Shared installation (needs root rights):

           ┃ arch="centauri_bash_lib.tgz"        # what to install
           ┃ dest="/usr/local/share/centauri"    # where to install (CEN_ROOT)
           ┃ 
           ┃ sudo mkdir -p "$dest"
           ┃ sudo tar -C "$dest" -xaf "$arch"
           ┃ sudo "$dest"/tools/centauripaths --info install

           Private installation (no root rights needed):

           ┃ arch="centauri_bash_lib.tgz"        # what to install
           ┃ dest=~/.centauri                    # where to install (CEN_ROOT)
           ┃ 
           ┃ mkdir -p "$dest"
           ┃ tar -C "$dest" -xaf "$arch"
           ┃ "$dest"/tools/centauripaths --info install
           ┃ ln -s "$dest" ~/centauritools
           ┃ PATH+=":~/centauritools"            # add this to your ~/.bashrc

Non-FHS:   Most Linux systems follow the FSH standard. For other implementations or to install
           into a non-root FS, the CEN_PATHS array variable is provided. It is initialized by
           the library proxy to FSH values. The CEN_PREFIX variable can be set to point to a
           different root folder:

           ┃ # to alter the FS root folder (not required for termux, see below)
           ┃ export CEN_PREFIX=/some/other/root

           When CEN_PREFIX is not set but PREFIX is non-empty and no "/var" folder is found,
           _centauri_bash_lib sets CEN_PREFIX="$PREFIX". This is used to support termux linux
           on android. CEN_PREFIX is automatically prepended to CEN_PATHS.

           ┃ # paths that can be installation dependent (don't use CEN_PREFIX here):
           ┃ CEN_PATHS=("" "/usr/bin" "/etc" "/var" "/tmp")

           At _centauri_bash_lib load time, it checks "${CEN_PATHS[1]/bash}". If this is not
           executable (e.g. not FSH compliant) the "$BASH" variable is used to get some prefix
           (path before "/usr/bin" or "/bin"). Using this prefix the library tries to locate
           "/etc", "/var" and "/tmp". The prefix itself is saved to "$CEN_PATHS" (which is
           identical to "${CEN_PATHS[0]}").

           The GNU core utilities can be installed either at "$CEN_PATHS/usr/bin" or at
           "$CEN_PATHS/bin". The autodetected path is stored as "${CEN_PATHS[1]}".

           To override the autogenerated library proxy, the [proxy] section in the
           configuration file "centauri-bash-lib" can be used.

Customize: In the example centauripaths is called to trigger a default setup. Before doing so,
           the configuration can be tailored to local needs by editing the
           "$CEN_ROOT/tools/_centauri_bash_lib" proxy script.

           Installing as non-root user does not need configuration changes. See below for
           configuration details ...

Proxy:     Loading _centauri_bash_lib into a user script always invokes a proxy, see [[Library
           Proxy]] for details. This proxy contains some configuration information used to
           locate the library itself. Every folder containing user scripts wanting to use
           _centauri_bash_lib must contain a symlink to the proxy.

           The proxy at $CEN_ROOT/tools is recreated by the installation process. If you are
           using multiple binary folders symlink the proxy rather than creating copies.

Config:    The proxy source is $CEN_ROOT/tools/_centauri_bash_lib and it contains a
           configuration statement that looks like this:

           ┃ export CEN_ROOT_DEF=("/usr/local/share/centauri" "/usr/local/bin"
           ┃                      "/opt/centauri" "root:staff")

           This defines a bash array variable with three or four elements (<empty> stands for a
           minus sign or an empty string):

               [0]     The installation root $CEN_ROOT (should be the path of
                       the installation folder)
               [1]     <empty> -or- folder to symlink user scripts (a folder
                       contained in $PATH simplifies calling user scripts).
                       This field is ignored if the folder is not writable.
               [2]     <empty> -or- symlink to $CEN_ROOT/tools (just an
                       alias that should be easy to remember). This field is
                       ignored if the base folder is not writable.
               [3]     <empty> or a [user][:group], sets the ownership of created
                       folders.

Setup:     Parts of the folder tree shown below are added by _centauri_bash_sys. An automatic
           setup of the tree is done on the 1st execution (as root user) if the persistent
           symlink is missing. The folders for persistent and transient are only of interrest
           for tools that run as root anyhow:

           ┃ $CEN_ROOT
           ┃    ├── default     # dynamic, link or folder
           ┃    ├── html        # static, documentation
           ┃    ├── library     # static, _centauri_bash_lib code
           ┃    ├── locale      # static, translations
           ┃    ├── persistent  # dynamic, persistent cache
           ┃    ├── tools       # static, user scripts ($CEN_TOOLS)
           ┃    └── transient   # dynamic, volatile cache

           The tree shown above should be complete after (automatic) setup. The default leaf
           is a symlink to /etc/default on Debian or a folder of its own otherwise. It can be
           used for user defined configuration data.

           The following commands can be run to force a (repair) setup:

           ┃ centauripaths --info install          # setup with prompts
           ┃ centauripaths --info install --yes    # setup without prompts

Updates:   If you add own scripts to the tools folder, symlinks to the binary folder (like
           /usr/local/bin) are created this way:

           ┃ centauripaths --info update           # update binary symlinks

Uninstall: To remove _centauri_bash_lib completely type one of those:

           ┃ centauripaths --info uninstall        # uninstall with prompt
           ┃ centauripaths --info uninstall --yes  # uninstall without prompt

           WARNING: uninstall will remove the whole $CEN_ROOT tree.

Remarks:   As mentioned above, there is no separate installation program. Every script that
           calls _centauri_bash_lib main() has the --info option and can be used
           (centauripaths was just used as an example).

           Verbs and options following --info must be typed exactly as documented above. They
           cannot be abbreviated and must appear in that order.

           To override the default configuration (built into the proxy) create the file
           $CEN_ROOT/default/centauri-bash-lib, see sysconfig(). Some data from the
           configuration file is compiled into the proxy during setup.

