#!/usr/bin/env bash

# ------------------------------------------------------------------------------
# README + This is just an example for a library installer/updater
#
# Use it like:
#
# °     $ tar -xaf centauri-bash-lib_N.NN.tgz
# °     $ centauri-bash-lib_N.NN/README.setup
# °     $ rm -r centauri-bash-lib_N.NN
#
# Or for a shared installation via sudo (use fakeroot on termux):
#
# °     $ tar -xaf centauri-bash-lib_N.NN.tgz
# °     $ sudo centauri-bash-lib_N.NN/README.setup
# °     $ rm -r centauri-bash-lib_N.NN
#
# The default paths can be overridden by passing install info as argument.
# The info argument is a string of up to 3 colon separated fields:
#
# °     <base>:<tools>:<link>
#
# °     <base>      # the base folder           (/var/centauri)
# °     <tools>     # a folder to symlink tools (/usr/local/bin)
# °     <links>     # symlink for tools folder  (/opt/centauritools)
# ------------------------------------------------------------------------------

# A root FS prefix can be set here (not needed for termux):
# export CEN_PREFIX="/some/other/root"

# Installation defaults for shared and private install - can be edited

if [ "$EUID" = 0 ] ; then                               # shared (root)
    INFO=/var/centauri:/usr/local/bin:/opt/centauritools
else                                                    # private
    INFO=~/.centauri::~/centauritools 
fi

# ------------------------------------------------------------------------------
# Run installation (no configuration parameters in this part)
# ------------------------------------------------------------------------------

# do not use predefined centauri-bash-lib root, get destination path
CEN_ROOT= 
INFO="${1:-$INFO}"                                      # cmd line override
DEST="${INFO%%:*}"                                      # destination path

# get folder of this script
ROOT="$BASH_SOURCE"
[ "${ROOT::1}" = '/' ] || ROOT="$PWD/$ROOT"
ROOT="${ROOT%/*}"
ROOT="${ROOT%/.}"

# do we have an existing installation?
if [ -d "$DEST/library" ] ; then
    SELF=update
    echo "$SELF: updating existing installation..."
else
    SELF=setup
    echo "$SELF: installing from scratch ..."
fi 1>&2

# change folder to installation source
cd "$ROOT" || exit $?
# path to find centauricreate and to load the bootstrap proxy
PORG="$ROOT/tools:$PATH"
# path to find CEN_LIBRARY for uglify optimization
PDES="$DEST/tools:$PATH"

# setup/update installation destination
PATH="$PORG" centauricreate --embed="$SELF:a" --info setup - "$INFO" || exit $?

# run library installer (creates real poxy and bash completion)
echo 1>&2
PATH="$PORG" centauricreate --embed="$SELF" --info install "$INFO" || exit $?

# run autoload to check for bash loadables
PATH="$PDES" $DEST/library/autoload --builtin --embed="$SELF:a" -

# create *.p files to optimize loading speed
PATH="$PDES" $DEST/library/uglify --embed="$SELF:a" -U -D

# ------------------------------------------------------------------------------
# Optional: create an example library config file
# ------------------------------------------------------------------------------

echo 1>&2
[ "$EUID" != 0 -a ! -d "$DEST/default" ] && mkdir "$DEST/default"
PATH="$PDES" $DEST/tools/centauricreate --embed="$SELF" --template=config -

# ------------------------------------------------------------------------------
# Optional: generate HTML documentation
# ------------------------------------------------------------------------------

echo 1>&2
PATH="$PDES" $DEST/tools/centaurihelp --embed="$SELF" --generate=all --delete
if [ ! -s "$DEST/html/index.html" ] ; then
    PATH="$PDES" $DEST/tools/centaurihelp --embed="$SELF" --generate=dummy --yes
elif [ "$DEST/library/_centauri_bash_lib" -nt "$DEST/html/index.html" ] ; then
    echo "$SELF: Your Html documentation is outdated, please rebuild" 1>&2
fi

# ------------------------------------------------------------------------------
# installation completed
# ------------------------------------------------------------------------------
{   echo
    echo "$SELF: You may now remove: $ROOT"
} 1>&2

# done
