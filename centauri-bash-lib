# This is configuration data for 'Centauri Bash Library'. See documentation for
# library module "_centauri_bash_run".

# ------------------------------------------------------------------------------
# The sections [shortpaths] [launcher] and [terminal] are processed at runtime
# by the functions with the same names as the sections.
#
# It is possible to have a private version of this configuration file at
# "~/.config/centauri-bash-lib" or at "~/.centauri-bash-lib".
# ------------------------------------------------------------------------------
[shortpath]
    # paths defined/overridden by the library
    #path "root"       "$CEN_ROOT"          "centauritools installation root"
    #path "library"    "$CEN_LIBRARY"       "centauri_bash_lib library files"
    #path "tools"      "$CEN_TOOLS"         "centauritools applications"
    #path "locale"     "$CEN_ROOT/locale"   "centauritools/library translations"
    #path "default"    "$CEN_ROOT/default"  "centauritools/library configuration files"
    #path "persistent" "$CEN_ROOT/persistent" "centauritools persistent cache"
    #path "transient"  "$CEN_ROOT/transient" "centauritools volatile cache"
    #path "temporary"  "$XDG_RUNTIME_DIR|$TMPDIR|$TMP" "the user's temporary folder"

    # others
    path "docs"      "/usr/share/doc"      "Linux documentation"

[launcher]
    # desktop apps (- is for any desktop session, must be last)
    editor      -       kwrite featherpad
    files       -       dolphin
    browser     -       unfug firefox falkon qml
    kiosk       -       qml falkon firefox
    httpd       -       lighttpd

    # run a function to start the app (see terminal function)
    console     -       @terminal

    # terminal apps (tty is for non-desktop mode)
    editor      tty     nano vim
    files       tty     mc
    browser     tty     w3m

    # qml needs a few hints (@_cen_win_qmlweb creates the qml script)
    -ignore:qml         qtchooser
    -path:qml           /usr/lib/*/qt5/bin/qml
    browser:qml         @launcher_qmlweb 1024 768 1.2
    kiosk:qml           @launcher_qmlweb  1000 800 1.2

    # lighttpd needs a script that gets the configuration
    httpd:lighttpd      @launcher_httpd 8080 /var/www

    # command line args
    kiosk:firefox       --fullscreen --new-window
    browser:firefox     --new-window

    kiosk:falkon        --fullscreen --new-window --no-extensions
    browser:falkon      --new-window --no-extensions

    # info text for apps (not commands)
    info:editor         text editor
    info:files          file manager
    info:browser        web browser
    info:kiosk          web browser in kiosk mode
    info:console        command line terminal
    info:httpd          launch a private web server

[terminal]
    # emulators for KDE/Gnome sessions:
    emulator    kde     konsole qterminal gnome-terminal xterm
    emulator    gnome   gnome-terminal konsole qterminal xterm
    # other session types (must be last emulator line):
    emulator    -       qterminal gnome-terminal konsole  xterm

    # options for emualator applications. Traditionally option -e is used to
    # run a program, add option -- for emulators that use -- instead ... 
    -args:konsole       --hide-tabbar --hide-menubar --nofork
    -title:konsole      --title

    -args:gnome-terminal    --hide-menubar --wait --
    -title:gnome-terminal   --title

    -args:xterm         -fa Monospace -fs 14 -geometry 100x30

    # in many case we don't need to run an emulator, so we check our ancestors until
    #  we find something blacklisted (start emulator) or whitelisted (no emulator):

    # no emulator if we find a login shell
    login               -bash|-dash|-csh|-sh
    # continue search if ancestor is a shell
    shell               bash|dash|csh|sh
    # no emulator for these ...
    white               sudo|kdeinit.*\ konsole.*|konsole.*|gnome.*|qterminal|xterm 
    # needing to launch emulator ...
    black               krunner.*|lx.*-session|plasma.*
                        # no desktop, no xroot
    black-startup       sddm.*|startkde.*|startplasma.*
                        # embedded konsole, check KONSOLE_DBUS_SERVICE
    #black-konsole       dolphin*|kde*|plasma*
    black-konsole       dolphin.*|kde.*

# ------------------------------------------------------------------------------
# This is configuration data for centauriXXXX --info install|uninstall|update
#
# The sections [library] and [proxy] are used at install time to generate the
# library proxy. It makes no sense to have these in a private configuration
# ------------------------------------------------------------------------------

[library]
    # installation defaults (root, binaries, shortcut, repository, owner)
#####    defaults "/var/centauri" "/usr/local/bin" "/admin" "/var/centauri/admin" "root:staff"

    # include list for tool links (centauri* and _centauri_bash_lib are default)
    # include "utilities/show-unattended-upgrades" "virtualbox/vbox"

    # exclude list for tool links (applies to centauri* default includes)
    exclude ""

    # obsolete tool files, tool sym-links to be removed
    # obsolete "centauri_demo1" "centautri_demo2"

    # list of service tools to be enabled (systemd or /etc/init.d services)
    # service "centauriswitch" "centauriswap" 

    # redirections used by _centauri_bash_ext prettypath (option: -l local, -n network)
    # repath -l "/var/lib/centauri/import/([a-z]+[0-9a-z]*)_([a-z]+[0-9a-z]*)(/.*)?" "/data/home" "/data/%1/%2%3"
    # repath -l "/dev/shm(/.*)?" "/tmp%1"

[proxy]
    # non-comment lines get copied verbatim into the proxy

# End
