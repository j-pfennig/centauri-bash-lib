# --- Proxy to load _centauri_bash_lib --- (bootstrap version)

# The CEN_INSTALL settings are used by 'centaurixxxx --info install [<inst>]".
# The <inst> parameter overrides the centauri-bash-lib config file and the
# config file overrides the setting of the CEN_INSTALL varibale. The install
# process finally replaces the bootstrap proxy with a customized proxy.

# installation defaults are: <root>[:<bin>[:<tools>[:<repo>]]]
if [ -z "$CEN_INSTALL" ] ; then
    if [ "$EUID" = 0 ] ; then
        CEN_INSTALL="/usr/local/shared/centauri:/usr/local/bin:/opt/centauritools"
    else
        CEN_INSTALL="$HOME/.centauritools:$HOME/bin:$HOME/centauritools"
    fi
fi

# find the library root folder
if [ "${CEN_ROOT:-.}" = '.' ] ; then
    export CEN_ROOT="${CEN_INSTALL%%:*}"
    export CEN_TOOLS="$CEN_ROOT/tools"
    if [ ! "$CEN_TOOLS/_centauri_bash_lib" -ef "$BASH_SOURCE" ] ; then
        CEN_TOOLS=$(readlink -f "$(type -p _centauri_bash_lib)")
        CEN_TOOLS="${CEN_TOOLS%/*}" ; CEN_ROOT="${CEN_TOOLS%/*}"
    fi
elif [ "${CEN_TOOLS:--}" = '-' ] ; then
    export CEN_TOOLS="$CEN_ROOT/tools"
fi
export CEN_LIBRARY="$CEN_ROOT/library"

# paths that can be installation dependent
CEN_PATHS=("" "/usr/bin" "/etc" "/var" "/tmp")

# path replacements from [library] section
CEN_PATH_REXP=()

# sanitize environment (bash needs TMPDIR)
[ -z "$TMPDIR" ] && export TMPDIR="${XDG_RUNTIME_DIR:-${CEN_PATHS[4]:-/tmp}}" ;
[ -z "$TMP" ] || export TMP="$TMPDIR"

# load real lib, use packed version if newer
if [ "$CEN_LIBRARY/_centauri_bash_lib.p" -nt "$CEN_LIBRARY/_centauri_bash_lib" ] ; then
    . $CEN_LIBRARY/_centauri_bash_lib.p "$@" || exit 2
else
    . $CEN_LIBRARY/_centauri_bash_lib "$@" || exit 2
fi

# end
